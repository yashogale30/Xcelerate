https://leetcode.com/problems/spiral-matrix-iv/


/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
/*
create a 2d matrix of size m x n and initialize it with -1, then using directions add the linked list elemenst in spiral
*/

class Solution {
public:
    vector<vector<int>> spiralMatrix(int m, int n, ListNode* head) 
    {
        int l = 0;
        int r = n-1;
        int t = 0;
        int b = m-1;
        vector<vector<int>>sol(m,vector<int>(n,-1));
        while(l<=r && t<=b)
        {
            for(int i = l;i<=r;i++)
            {
                if(head==NULL)
                    break;
                else
                {
                    sol[t][i] = head->val;
                    head = head->next;
                }
            }
            t+=1;
            if(head == NULL)
                break;
            for(int i = t; i<=b;i++)
            {
                if(head==NULL)
                    break;
                else
                {
                    sol[i][r] = head->val;
                    head = head->next;
                }
            }
            r-=1;
            if(t<=b && head!=NULL)
            {
                for(int i = r; i>=l;i--)
                {
                    if(head==NULL)
                        break;
                    else
                    {
                        sol[b][i] = head->val;
                        head = head->next;
                    }
                }
                b-=1;
            }
            if(l<=r && head!=NULL)
            {
                for(int i = b; i>=t;i--)
                {
                    if(head==NULL)
                        break;
                    else
                    {
                        sol[i][l] = head->val;
                        head = head->next;
                    }
                }
                l+=1;
            }
        }
        return sol;
    }
    
};
